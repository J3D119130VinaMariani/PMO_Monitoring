@using PMO_Monitoring.viewmodel
@model VMMstUser

@{
	Layout = null;
}


<form class="md-float-material" id="reset_pass">

	<p style="font-size:18px;color: darkgrey;">Masukkan password baru untuk akun anda</p>

	<div class="input-group"></div>
	<p style="font-size:14px;color: darkgrey;margin-top: 0;margin-bottom: 0;">Password*</p>
	<input type="password" id="Password" name="Password" class="form-control" placeholder="Password">
	<input type="hidden" name="Id" id="Id" value="@Model.Id" />
	<span class="md-line"></span>
	<span id="validate_password" class="text-danger"></span>


	<div class="input-group"></div>
	<p style="font-size:14px;color: darkgrey;margin-top: 0;margin-bottom: 0;">Masukkan ulang password*</p>
	<input type="password" id="Password2" name="Password2" class="form-control" placeholder="Masukkan ulang Password">
	<span class="md-line"></span>
	<span id="validate_newpassword" class="text-danger"></span>

	<div class="row m-t-30" style="justify-content: center;">
		<div class="col-md-5">
			<button type="submit" class="btn btn-primary btn-md btn-block waves-effect text-center m-b-20 btn-otp">Set Password</button>
		</div>
		</hr>
	</div>

</form>
<!-- end of form -->


<script>
	$("#reset_pass").validate({
		errorClass: "text-danger",
		rules: {
			Password: {
				required: true,
				strong_password: true
			},
			Password2: {
				required: true,
				equalTo: "#Password"
			}
		},
		messages: {
			PassWord: "Please fill the Password",
			Password2: {
				required: "Please fill the Password",
				equalTo: "Password not match"
			}
		},
		submitHandler: function (form) {
			var data = $("#reset_pass").serialize();
			
				$.ajax({
					type: 'post',
					url: "/LoginPage/NewPassword",
					data: data,
					dataType: "json",
					success: function (respon) {
						debugger
						if (respon.success) {
							alert("Password baru anda sudah berhasil di input")
							window.location.reload();
						}
					}
				})
		
		}
	})

	$.validator.addMethod("strong_password", function (value, element) {
		let password = value;
		if (!(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@@#$%&])(.{8,20}$)/.test(password))) {
			return false;
		}
		return true;
	}, function (value, element) {
		let password = $(element).val();
		if (!(/^(.{8,20}$)/.test(password))) {
			return 'Password must be between 8 to 20 characters long.';
		}
		else if (!(/^(?=.*[A-Z])/.test(password))) {
			return 'Password must contain at least one uppercase.';
		}
		else if (!(/^(?=.*[a-z])/.test(password))) {
			return 'Password must contain at least one lowercase.';
		}
		else if (!(/^(?=.*[0-9])/.test(password))) {
			return 'Password must contain at least one digit.';
		}
		else if (!(/^(?=.*[@@#$%&])/.test(password))) {
			return "Password must contain special characters from @@#$%&.";
		}
		return false;
	});
</script>